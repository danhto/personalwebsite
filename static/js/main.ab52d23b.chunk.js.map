{"version":3,"sources":["assets/spaceship.png","App.tsx","serviceWorker.ts","components/MDBJumbotron/MDBJumbotron.tsx","components/MDBPills/MDBPills.tsx","components/Aboutme/Aboutme.tsx","components/Links/Links.tsx","components/Navigation/Navigation.tsx","components/MDBPanel/MDBPanel.tsx","components/MDBPanel/MDBPanelStarwars.tsx","components/Sorter/Sorter.tsx","index.tsx","logo.svg","assets/irobot.jpg","assets/knowledge.png","assets/cat.jpg","assets/grandcanyon.jpg","assets/iceland.jpg","assets/japan.jpg","assets/leafs.jpg","assets/prague.jpg","assets/snowboarding.jpg","assets/monster.png"],"names":["module","exports","__webpack_require__","p","App","_useState","useState","_useState2","Object","slicedToArray","toggleSlider","text","document","querySelector","classList","contains","add","remove","react_default","a","createElement","className","mdbreact_esm","to","outline","onClick","src","logo","alt","Boolean","window","location","hostname","match","robot","require","knowledge","cat","grandcanyon","iceland","japan","leafs","prague","snowboarding","descriptionArray","MDBJumbotronV2","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getLeadContent","display","handleCat","setState","counter","handleLeafs","handleSnowboarding","handleJapan","handleIceland","handlePrague","handleCanyon","updateHeader","console","log","ct","state","getBodyContent","_this$state","autoPlay","value","color","index_es","naturalSlideWidth","naturalSlideHeight","totalSlides","isPlaying","interval","slide","index","setInterval","leadContent","bodyContent","title","React","Component","Pills","items","default","togglePills","type","tab","e","objectSpread","md","active","activeItem","tabId","MDBJumbotron","Aboutme","MDBPills","Links","href","Navigation","isOpen","toggleCollapse","fluid","dark","expand","id","navbar","left","right","waves","placeholder","aria-label","PanelPage","weather","locale","country","description","icon","temperature","dataReady","errors","formatTemperature","pStyle","style","_this2","_this$props","coords","isGeolocationEnabled","width","marginTop","lattlong","latitude","longitude","appId","process","REACT_APP_WEATHER_API_KEY","axios","get","then","response","data","name","sys","main","temp","catch","error","status","getWeatherData","Fragment","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","monsterImagePath","spaceshipImagePath","MDBPanelStarwars","getStarwarsData","api","person","birth_year","gender","hair_color","height","mass","skin_color","homeworld","species","dataRetrieved","planet","climate","diameter","population","terrain","starship","cargo_capacity","cost_in_credits","crew","length","model","passengers","starship_class","Math","floor","random","pData","sData","getStarwarsContent","Sorter","handleChange","event","textValue","target","setSelectRooms","rooms","roomSize","initializeCases","setRoomSize","cases","i","array","Array","room","number","size","diversity","background","people","push","caseRooms","submitForm","parse","split","forEach","parseTextData","persons","placePeopleInRoomsForCaseA","entry","infoArray","newPerson","trim","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","checkRoomComposition","err","return","inBetween","abs","result","ReactDOM","render","react_router_dom","components_Navigation_Navigation","react_router","exact","path","component","MDBPanel","MDBPanel_MDBPanelStarwars","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ab52d23b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spaceship.7ff85897.png\";","import React, {useState} from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport {MDBBtn, MDBNavLink} from 'mdbreact'\r\n\r\nconst App = () => {\r\n    const [visible, setVisible] = useState(false)\r\n    const toggle = () => {\r\n        toggleSlider()\r\n    }\r\n    const toggleSlider = () => {\r\n        let text = document.querySelector(\".app-main-hidden-content\");\r\n        if (text && !text.classList.contains('slider')) {\r\n            text.classList.add('slider')\r\n        }\r\n        else if (text) {\r\n            text.classList.remove('slider')\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"app-main-content\">\r\n            <div className=\"app-main-header\">\r\n                <h2> Welcome! </h2>\r\n            </div>\r\n            <div className=\"app-main-text\">\r\n                <p> You've arrived at the one stop shop for everything Dan To. </p>\r\n            </div>\r\n            <div className=\"app-main-hidden-content\">\r\n                <MDBNavLink to=\"/personalwebsite/about\">TELL ME MORE!</MDBNavLink>\r\n            </div>\r\n            <div className=\"app-main-logo\">\r\n                <MDBBtn outline onClick={toggle}>\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                </MDBBtn>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { MDBJumbotron, MDBContainer, MDBRow, MDBCol, MDBProgress, MDBBadge } from \"mdbreact\";\r\nimport { CarouselProvider, Slider, Slide, ImageWithZoom, Dot } from 'pure-react-carousel';\r\nconst robot = require('../../assets/irobot.jpg')\r\nconst knowledge = require('../../assets/knowledge.png')\r\nconst cat = require('../../assets/cat.jpg')\r\nconst grandcanyon = require('../../assets/grandcanyon.jpg')\r\nconst iceland = require('../../assets/iceland.jpg')\r\nconst japan = require('../../assets/japan.jpg')\r\nconst leafs = require('../../assets/leafs.jpg')\r\nconst prague = require('../../assets/prague.jpg')\r\nconst snowboarding = require('../../assets/snowboarding.jpg')\r\n\r\ninterface Props {\r\n    display: number,\r\n    title: string\r\n}\r\n\r\ninterface State {\r\n    text: string,\r\n    autoPlay: boolean,\r\n    counter: number\r\n}\r\n\r\nconst descriptionArray = [\r\n    \"My dog, Cat!\",\r\n    \"Hockey: The Toronto Maple Leafs!\",\r\n    \"Snowboarding!\",\r\n    \"Traveling: Japan!\",\r\n    \"Traveling: Prague!\",\r\n    \"Traveling: Iceland!\",\r\n    \"Traveling: Grand Canyon!\",\r\n]\r\n\r\nclass MDBJumbotronV2 extends React.Component<Props,State> {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            text: descriptionArray[0],\r\n            autoPlay: true,\r\n            counter: 0,\r\n        }\r\n    }\r\n\r\n    getLeadContent = () => {\r\n        const {display} = this.props;\r\n\r\n        if (display === 1) {\r\n            //return <p className='lead'>DAN TO</p>\r\n        }\r\n        else if (display === 2) {\r\n            return (\r\n                <div className=\"skill-title-content\">\r\n                    <p>\r\n                        My proficiencies are many, but here are a few of my more notable ones!\r\n                        <br />\r\n                        Each skill is conveniently paired with an indicator of my comfort with it.\r\n                    </p>\r\n                    <img src={knowledge} />\r\n                </div>\r\n            )\r\n        }\r\n        else if (display === 3) {\r\n            return (\r\n                <p>\r\n                    These are some of the things that fuel my soul!\r\n                </p>\r\n            )\r\n        }\r\n    }\r\n\r\n    handleCat = () => {\r\n        this.setState({\r\n            text: \"My dog, Cat!\",\r\n            counter: 0\r\n        })\r\n    }\r\n\r\n    handleLeafs = () => {\r\n        this.setState({\r\n            text: \"Hockey: The Toronto Maple Leafs!\",\r\n            counter: 1\r\n        })\r\n    }\r\n\r\n    handleSnowboarding = () => {\r\n        this.setState({\r\n            text: \"Snowboarding!\",\r\n            counter: 2\r\n        })\r\n    }\r\n\r\n    handleJapan = () => {\r\n        this.setState({\r\n            text: \"Traveling: Japan!\",\r\n            counter: 3\r\n        })\r\n    }\r\n\r\n    handleIceland = () => {\r\n        this.setState({\r\n            text: \"Traveling: Iceland!\",\r\n            counter: 5\r\n        })\r\n    }\r\n\r\n    handlePrague = () => {\r\n        this.setState({\r\n            text: \"Traveling: Prague!\",\r\n            counter: 4\r\n        })\r\n    }\r\n\r\n    handleCanyon = () => {\r\n        this.setState({\r\n            text: \"Traveling: Grand Canyon!\",\r\n            counter: 6\r\n        })\r\n    }\r\n\r\n    updateHeader = () => {\r\n        console.log(\"Updating header...\")\r\n        var ct = this.state.counter === 6 ? 0 : this.state.counter + 1\r\n\r\n        this.setState({\r\n            counter: ct,\r\n            text: descriptionArray[ct]\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(this.updateHeader, 7500)\r\n    }\r\n\r\n    getBodyContent = () => {\r\n        const {display} = this.props;\r\n        const {text, autoPlay} = this.state;\r\n\r\n        if (display === 1) {\r\n            return (\r\n                <div>\r\n                    <p>\r\n                        I was born and raised in Toronto, Canada. I graduated from \r\n                        York University with a Bachelor of Engineering in Computer Engineering \r\n                        and a Bachelor of Arts in Psychology. With these experiences I \r\n                        have obtained a certain set of skills, that many often describe \r\n                        as giving me special, nearly unfair, mastery over all things \r\n                        <b> human</b> and <b>machine</b>!\r\n                    </p>\r\n                    <img src={robot} />\r\n                </div>\r\n            )\r\n        }\r\n        else if (display === 2) {\r\n            return (\r\n                <div className=\"skill-summary\">\r\n                    <div className=\"skill-languages\">\r\n                        <h4>HTML/CSS</h4>\r\n                        <MDBProgress value={90} className='my-2'>Experienced</MDBProgress>\r\n                        <h4>Javascript</h4>\r\n                        <MDBProgress value={80} color=\"red\" className='my-2'>Experienced</MDBProgress>\r\n                        <h4>Java</h4>\r\n                        <MDBProgress value={70} color=\"red\" className='my-2'>Comfortable</MDBProgress>\r\n                        <h4>Go Lang</h4>\r\n                        <MDBProgress value={70} className='my-2'>Comfortable</MDBProgress>\r\n                        <h4>React</h4>\r\n                        <MDBProgress value={70} className='my-2'>Comfortable</MDBProgress>\r\n                        <h4>Typescript</h4>\r\n                        <MDBProgress value={50} className='my-2'>Comfortable but Rusty</MDBProgress>\r\n                        <h4>Python</h4>\r\n                        <MDBProgress value={30} className='my-2'>Familiar</MDBProgress>\r\n                    </div>\r\n                    <div className=\"skill-others\">\r\n                        <h4>Agile</h4>\r\n                        <MDBProgress value={90} className='my-2'>Experienced</MDBProgress>\r\n                        <h4>Jenkins</h4>\r\n                        <MDBProgress value={80} className='my-2'>Experienced</MDBProgress>\r\n                        <h4>Kubernetes</h4>\r\n                        <MDBProgress value={75} className='my-2'>Comfortable</MDBProgress>\r\n                        <h4>Docker</h4>\r\n                        <MDBProgress value={70} className='my-2'>Comfortable</MDBProgress>\r\n                        <h4>GCP</h4>\r\n                        <MDBProgress value={60} className='my-2'>Familiar, but there's so much!</MDBProgress> \r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (display === 3) {\r\n            return (\r\n                <div>\r\n                    <div>\r\n                    <MDBBadge className=\"mdb-badge-header\" color=\"primary\">{text}</MDBBadge>\r\n                    </div>\r\n                    <CarouselProvider\r\n                        naturalSlideWidth={750}\r\n                        naturalSlideHeight={475}\r\n                        totalSlides={7}\r\n                        isPlaying={autoPlay}\r\n                        interval={7500}\r\n                        >\r\n                        <Dot slide={0} onClick={this.handleCat}>{}</Dot>\r\n                        <Dot slide={1} onClick={this.handleLeafs}>{}</Dot>\r\n                        <Dot slide={2} onClick={this.handleSnowboarding}>{}</Dot>\r\n                        <Dot slide={3} onClick={this.handleJapan}>{}</Dot>\r\n                        <Dot slide={4} onClick={this.handlePrague}>{}</Dot>\r\n                        <Dot slide={5} onClick={this.handleIceland}>{}</Dot>\r\n                        <Dot slide={6} onClick={this.handleCanyon}>{}</Dot>\r\n                        <Slider>\r\n                            <Slide className=\"slide-image-holder\" index={0}>\r\n                                <ImageWithZoom src={cat} />\r\n                            </Slide>\r\n                            <Slide className=\"slide-image-holder\" index={1}>\r\n                                <ImageWithZoom src={leafs} />\r\n                            </Slide>\r\n                            <Slide className=\"slide-image-holder\" index={2}>\r\n                                <ImageWithZoom src={snowboarding} />\r\n                            </Slide>\r\n                            <Slide className=\"slide-image-holder\" index={3}>\r\n                                <ImageWithZoom src={japan} />\r\n                            </Slide>\r\n                            <Slide className=\"slide-image-holder\" index={4}>\r\n                                <ImageWithZoom src={prague} />\r\n                            </Slide>\r\n                            <Slide className=\"slide-image-holder\" index={5}>\r\n                                <ImageWithZoom src={iceland} />\r\n                            </Slide>\r\n                            <Slide className=\"slide-image-holder\" index={6}>\r\n                                <ImageWithZoom src={grandcanyon} />\r\n                            </Slide>\r\n                        </Slider>\r\n                    </CarouselProvider>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    render () {\r\n        const leadContent = this.getLeadContent();\r\n        const bodyContent = this.getBodyContent();\r\n        const {title} = this.props;\r\n\r\n        return (\r\n            <MDBContainer className=\"mt-5 text-center\">\r\n            <MDBRow>\r\n              <MDBCol>\r\n                <MDBJumbotron>\r\n                    <h2 className=\"h1 display-3\">{title}</h2>\r\n                    {leadContent}\r\n                    <hr className=\"my-2\" />\r\n                    {bodyContent}\r\n                </MDBJumbotron>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBContainer>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default MDBJumbotronV2","import React, { Component } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBTabPane, MDBTabContent, MDBNav, MDBNavItem, MDBNavLink } from \"mdbreact\";\r\nimport MDBJumbotron from '../MDBJumbotron/MDBJumbotron'\r\n\r\nclass Pills extends Component {\r\n  state = {\r\n    items: {\r\n      default: \"1\",\r\n    }\r\n  };\r\n\r\n  togglePills = (type, tab) => e => {\r\n    console.log(\"Toggling pill to state \" + tab)\r\n    console.log(this.state)\r\n    console.log(this.state.items['default'] === \"3\")\r\n    //e.preventDefault();\r\n    if (this.state.items[type] !== tab) {\r\n      let items = { ...this.state.items };\r\n      items[type] = tab;\r\n      this.setState({\r\n        items\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <MDBContainer className=\"mt-4\">\r\n          <MDBRow>\r\n            <MDBCol md=\"12\">\r\n              <h2>All things Dan To</h2>\r\n              <MDBNav className=\"mt-5 nav-pills\">\r\n                <MDBNavItem>\r\n                  <MDBNavLink to=\"#\" active={this.state.items[\"default\"] === \"1\"} onClick={this.togglePills(\"default\", \"1\")} >\r\n                    Quick Bio\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink to=\"#\" active={this.state.items[\"default\"] === \"2\"} onClick={this.togglePills(\"default\", \"2\")} >\r\n                    Skills\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink to=\"#\" active={this.state.items[\"default\"] === \"3\"} onClick={this.togglePills(\"default\", \"3\")} >\r\n                    Interests\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n              </MDBNav>\r\n              <MDBTabContent activeItem={this.state.items[\"default\"]} className=\"mdb-tab-content\">\r\n                <MDBTabPane tabId=\"1\">\r\n                  <MDBJumbotron title=\"Hello Me!\" display={1}/>\r\n                </MDBTabPane>\r\n                <MDBTabPane tabId=\"2\">\r\n                  <MDBJumbotron title=\"Hello Skills!\" display={2}/>\r\n                </MDBTabPane>\r\n                <MDBTabPane tabId=\"3\">\r\n                  <MDBJumbotron title=\"Hello Interests!\" display={3}/>\r\n                </MDBTabPane>\r\n              </MDBTabContent>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Pills;","import React from 'react'\r\nimport MDBPills from '../MDBPills/MDBPills'\r\nconst Aboutme = () => {\r\n    return (\r\n        <div>\r\n            <MDBPills />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Aboutme","import React from 'react'\r\nimport {MDBBtn, MDBContainer} from 'mdbreact'\r\n\r\nconst Links = () => {\r\n\r\n    return (\r\n        <MDBContainer className=\"links-content\">\r\n            <h2 className=\"links-header\">Want to know even more? <br/>\r\n                Try the links below if you couldn't find your answer here! <br/>\r\n                Thanks for visiting!</h2>\r\n            <MDBBtn className=\"links-linkedin\" color=\"primary\" href=\"https://www.linkedin.com/in/danhto\">\r\n                LinkedIn\r\n            </MDBBtn>\r\n            <br/>\r\n            <MDBBtn className=\"links-github\" color=\"secondary\" href=\"https://github.com/danhto\">\r\n                Github\r\n            </MDBBtn>\r\n        </MDBContainer>\r\n    )\r\n    \r\n}\r\n\r\nexport default Links","import React from 'react'\r\nimport {MDBContainer,MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBFormInline} from 'mdbreact'\r\n\r\nclass Navigation extends React.Component {\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n    toggleCollapse = () => {\r\n        this.setState ({\r\n            isOpen: !this.state.isOpen\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { isOpen } = this.state\r\n\r\n        return (\r\n            <MDBContainer fluid>\r\n                <MDBNavbar color=\"indigo\" dark expand=\"md\">\r\n                <MDBNavbarBrand>\r\n                    <strong className=\"white-text\">DAN TO</strong>\r\n                </MDBNavbarBrand>\r\n                <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n                <MDBCollapse id=\"navbarCollapse3\" isOpen={isOpen} navbar>\r\n                    <MDBNavbarNav left>\r\n                        <MDBNavItem>\r\n                            <MDBNavLink to=\"/personalwebsite\">Home</MDBNavLink>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <MDBNavLink to=\"/personalwebsite/about\">About Me</MDBNavLink>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <MDBNavLink to=\"/personalwebsite/links\">Links</MDBNavLink>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <MDBNavLink to=\"/personalwebsite/apps\">Apps</MDBNavLink>\r\n                        </MDBNavItem>\r\n                    </MDBNavbarNav>\r\n                    <MDBNavbarNav right>\r\n                        <MDBNavItem>\r\n                            <MDBFormInline waves>\r\n                            <div className=\"md-form my-0\">\r\n                                <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            </div>\r\n                            </MDBFormInline>\r\n                        </MDBNavItem>\r\n                    </MDBNavbarNav>\r\n                </MDBCollapse>\r\n                </MDBNavbar>\r\n            </MDBContainer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation","import React from 'react';\r\nimport { MDBCard, MDBCardTitle, MDBCardText, MDBContainer } from \"mdbreact\";\r\nimport {geolocated, GeolocatedProps} from 'react-geolocated'\r\nimport axios from 'axios'\r\n\r\ntype Weather = {\r\n    locale: string,\r\n    country: string,\r\n    description: string,\r\n    icon: string,\r\n    temperature: number\r\n}\r\n\r\ninterface State {\r\n    weather: Weather,\r\n    dataReady: boolean,\r\n    errors: string\r\n}\r\n\r\nclass PanelPage extends React.Component<GeolocatedProps> {\r\n    state = {\r\n        weather: {\r\n            locale: \"unknown\",\r\n            country: \"unknown\",\r\n            description: \"unknown\",\r\n            icon: \"unknown\",\r\n            temperature: \"unknown\",\r\n        },\r\n        dataReady: false,\r\n        errors: \"\"\r\n    }    \r\n\r\n    formatTemperature = (temperature) => {\r\n        var color\r\n        if (temperature >= 30) {\r\n            color = \"red\"\r\n        }\r\n        else if (temperature >= 25 && temperature < 30) {\r\n            color = \"orange\"\r\n        }\r\n        else if (temperature >= 15 && temperature < 25) {\r\n            color = \"green\"\r\n        }\r\n        else if (temperature > 5 && temperature < 15) {\r\n            color = \"cyan\"\r\n        }\r\n        else {\r\n            color = \"blue\"\r\n        }\r\n\r\n        const pStyle = {\r\n            color: color\r\n        }\r\n\r\n        return (\r\n            <p className=\"temp-content-temperature\" style={pStyle}>{temperature} °C</p>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {dataReady, errors, weather} = this.state;\r\n        const {coords, isGeolocationEnabled} = this.props;\r\n\r\n        const getWeatherData = () => {\r\n            console.log(\"Getting weather data with state...\")\r\n            console.log(this.state)\r\n            if (coords && !dataReady && errors === \"\") {\r\n                console.log(\"Making api call...\")\r\n                var lattlong = 'lat=' + coords.latitude + '&lon=' + coords.longitude\r\n                var appId = \"&units=metric&appid=\" + process.env.REACT_APP_WEATHER_API_KEY\r\n                axios.get(\"https://api.openweathermap.org/data/2.5/weather?\" + lattlong + appId)\r\n                .then(response => {\r\n                    console.log(response.data)\r\n                    this.setState ({\r\n                        weather: { \r\n                            locale: response.data.name,\r\n                            country: response.data.sys.country,\r\n                            description: response.data.weather[0].description,\r\n                            icon: \"http://openweathermap.org/img/wn/\" + response.data.weather[0].icon + \"@2x.png\",\r\n                            temperature: response.data.main.temp\r\n                        },\r\n                        dataReady: true\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    if (error.response.status === 429) {\r\n                        this.setState ({\r\n                            errors: \"Weather api request limits reached, cannot query local weather, but I hope it's pleasant!\"\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n\r\n            return true\r\n        }\r\n\r\n        return (\r\n            <MDBContainer>\r\n                <MDBCard className=\"card-body\" style={{ width: \"22rem\", marginTop: \"1rem\" }}>\r\n                    <MDBCardTitle className=\"panel-title\">Current Weather</MDBCardTitle>\r\n                    <MDBCardText>\r\n                        {   \r\n                            isGeolocationEnabled && coords && getWeatherData() && dataReady ?\r\n                            <div className=\"temp-content\">\r\n                                <p className=\"temp-content-location\">The current temperature for {weather.locale} is:</p>\r\n                                {this.formatTemperature(weather.temperature)}\r\n                                <p className=\"temp-content-description\">The overall forecast is {weather.description}:</p>\r\n                                <img className=\"temp-content-icon\" src={weather.icon} />\r\n                            </div> :\r\n                            <>No location data! {errors}</>\r\n                        }\r\n                    </MDBCardText>\r\n                </MDBCard>\r\n            </MDBContainer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default geolocated({\r\n    positionOptions: {\r\n        enableHighAccuracy: false,\r\n    },\r\n    userDecisionTimeout: 5000,\r\n})(PanelPage);","import React from 'react';\r\nimport { MDBCard, MDBCardTitle, MDBCardText, MDBContainer } from \"mdbreact\";\r\nimport axios from 'axios'\r\nconst monsterImagePath = require(\"../../assets/monster.png\");\r\nconst spaceshipImagePath = require(\"../../assets/spaceship.png\");\r\n\r\ntype starship = {\r\n    cargo_capacity: string, //The maximum number of kilograms that this starship can transport\r\n    cost_in_credits: string, //The cost of this starship new, in galactic credits\r\n    crew: string, // The number of personnel needed to run or pilot this starship\r\n    length: string, //The length of this starship in meters\r\n    model: string, //The model or official name of this starship\r\n    name: string, //The name of this starship\r\n    passengers: string, //The number of non-essential people this starship can transport\r\n    starship_class: string //The class of this starship\r\n}\r\n\r\ntype people = {\r\n    birth_year: string,\r\n    gender: string,\r\n    hair_color: string,\r\n    height: string,\r\n    mass: string,\r\n    name: string,\r\n    skin_color: string,\r\n    homeworld: planet,\r\n    species: species,\r\n}\r\n\r\ntype species = {\r\n    name: string,\r\n}\r\n\r\ntype planet = {\r\n    climate: string,\r\n    diameter: string,\r\n    name: string,\r\n    population: string,\r\n    terrain: string,\r\n}\r\n\r\ninterface Props {\r\n    api: string,\r\n}\r\n\r\ninterface State {\r\n    index: number,\r\n    dataRetrieved: boolean,\r\n    planet: planet,\r\n    person: people,\r\n    starship: starship,\r\n    errors: string\r\n}\r\n\r\nclass MDBPanelStarwars extends React.Component<Props, State> {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            index: Math.floor(Math.random() * 40),\r\n            dataRetrieved: false,\r\n            planet: {} as planet,\r\n            person: {} as people,\r\n            starship: {} as starship,\r\n            errors: \"\",\r\n        } \r\n    }   \r\n\r\n    getStarwarsData = () => {\r\n        axios.get(\"https://swapi.py4e.com/api/\"+this.props.api+\"/\"+this.state.index+\"/\")\r\n        .then(response => {\r\n            switch (this.props.api) {\r\n                case \"people\": {\r\n                    this.setState({\r\n                        person: {\r\n                            birth_year: response.data.birth_year,\r\n                            gender: response.data.gender,\r\n                            hair_color: response.data.hair_color,\r\n                            height: response.data.height,\r\n                            mass: response.data.mass,\r\n                            name: response.data.name,\r\n                            skin_color: response.data.skin_color,\r\n                            homeworld: response.data.homeworld,\r\n                            species: response.data.species,\r\n                        },\r\n                        dataRetrieved: true\r\n                    })\r\n                    return\r\n                }\r\n                case \"planet\": {\r\n                    this.setState({\r\n                        planet: {\r\n                            climate: response.data.climate,\r\n                            diameter: response.data.diameter,\r\n                            name: response.data.name,\r\n                            population: response.data.population,\r\n                            terrain: response.data.terrain,\r\n\r\n                        },\r\n                        dataRetrieved: true\r\n                    })\r\n                    return\r\n                }\r\n                case \"starships\": {\r\n                    this.setState({\r\n                        starship: {\r\n                            cargo_capacity: response.data.cargo_capacity, //The maximum number of kilograms that this starship can transport\r\n                            cost_in_credits: response.data.cost_in_credits, //The cost of this starship new, in galactic credits\r\n                            crew: response.data.crew, // The number of personnel needed to run or pilot this starship\r\n                            length: response.data.length, //The length of this starship in meters\r\n                            model: response.data.model, //The model or official name of this starship\r\n                            name: response.data.name, //The name of this starship\r\n                            passengers: response.data.passengers, //The number of non-essential people this starship can transport\r\n                            starship_class: response.data.starship_class //The class of this starship\r\n                        },\r\n                        dataRetrieved: true\r\n                    })\r\n                    return\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            this.setState({\r\n                errors: \"Something happened can't get Star Wars goodies :(\"\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getStarwarsData()\r\n    }\r\n\r\n    render() {\r\n        const {person, starship, dataRetrieved, errors} = this.state;\r\n        const {api} = this.props;\r\n\r\n        const getStarwarsContent = () => {\r\n            switch (api) {\r\n                case \"people\": {\r\n                    const pData = person\r\n\r\n                    return (\r\n                        <>\r\n                            <div className=\"starwars-person-title\">\r\n                                <h3 className=\"starwars-name\">\r\n                                    {pData.name}\r\n                                </h3>\r\n                                <a href=\"https://www.flaticon.com/free-icons/monster\" title=\"Monster icons created by juicy_fish - Flaticon\">\r\n                                    <img src={monsterImagePath} className=\"starwars-content-person-icon\" alt=\"alien-icon\"/>\r\n                                </a> \r\n                            </div>\r\n                            <p className=\"starwars-content-data\">\r\n                                {pData.name} was born in the year {pData.birth_year}.\r\n                                {pData.gender === \"male\" ? \" He \" : \" She \"} weighs {pData.mass} kg and is {pData.height} cm tall. \r\n                            </p>\r\n                        </>\r\n                    )\r\n                }\r\n                case \"starships\": {\r\n                    const sData = starship\r\n\r\n                    return (\r\n                        <>\r\n                        <div className=\"starwars-person-title\">\r\n                            <h3 className=\"starwars-name\">\r\n                                {sData.name}\r\n                            </h3>\r\n                            <a href=\"https://www.flaticon.com/free-icons/spaceship_1702089\" title=\"Spaceship icons created by FreePik - Flaticon\">\r\n                                <img src={spaceshipImagePath} className=\"starwars-content-starship-icon\" alt=\"spaceship-icon\"/>\r\n                            </a>\r\n                        </div>\r\n                        <p className=\"starwars-content-data\">\r\n                            Cost in galatic credits {sData.cost_in_credits} <br/>\r\n                            Crew size needed to run starship {sData.crew} <br/>\r\n                            Length in meters {sData.length} m <br/>\r\n                            Offical name {sData.model} <br/>\r\n                            Starship class: {sData.starship_class} <br/>\r\n                        </p>\r\n                    </>\r\n                    )\r\n                }\r\n            }            \r\n        }\r\n\r\n        return (\r\n            <MDBContainer>\r\n                <MDBCard className=\"card-body\" style={{ width: \"22rem\", marginTop: \"1rem\" }}>\r\n                    <MDBCardTitle className=\"panel-title\">Star Wars: Random Daily Education!</MDBCardTitle>\r\n                    <MDBCardText>\r\n                        {   \r\n                            dataRetrieved ?\r\n                            <div className=\"starwars-content\">\r\n                                {getStarwarsContent()}\r\n                            </div> :\r\n                            <>{errors}</>\r\n                        }\r\n                    </MDBCardText>\r\n                </MDBCard>\r\n            </MDBContainer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MDBPanelStarwars","import React from 'react';\r\n\r\ninterface SorterProps {\r\n\r\n}\r\n\r\ninterface SorterState {\r\n    textValue: string,\r\n    result: any,\r\n    persons: Person[],\r\n    rooms: number,\r\n    roomSize: number,\r\n    caseRooms: Room[],\r\n}\r\n\r\ntype Room = {\r\n    number: number,\r\n    size: number,\r\n    diversity: number,\r\n    background: number,\r\n    people: Person[],\r\n}\r\n\r\ntype Person = {\r\n    name: string,\r\n    background: string,\r\n    gender: string\r\n}\r\n\r\nclass Sorter extends React.Component<SorterProps, SorterState> {\r\n    constructor(props: SorterProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            textValue: \"jim,tech,m\\njohn,tech,m\\ntish,bus,f\\ncash,bus,m\\nblip,bus,f\\nchance,tech,f\",\r\n            result: \"\",\r\n            persons: [],\r\n            rooms: 0,\r\n            roomSize: 0,\r\n            caseRooms: []\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            textValue: event.target.value\r\n        });\r\n    }\r\n\r\n    setSelectRooms = (event) => {        \r\n        this.setState({\r\n            rooms: event.target.value\r\n        }, () => {\r\n            // initialize case rooms\r\n            if (this.state.roomSize > 0 && this.state.rooms > 0) {\r\n                this.initializeCases();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    setRoomSize = (event) => {\r\n        this.setState({\r\n            roomSize: event.target.value\r\n        }, () => {           \r\n            // initialize case rooms\r\n            if (this.state.roomSize > 0 && this.state.rooms > 0) {\r\n                this.initializeCases();\r\n            }\r\n        });\r\n    }\r\n\r\n    initializeCases = () => {\r\n        let cases: Room[] = [];\r\n        console.log(\"Initializing %s rooms with size %s\", this.state.rooms, this.state.roomSize);\r\n            \r\n        for (let i = 0; i < this.state.rooms; i++) {\r\n            const array = new Array<Person>(this.state.roomSize);\r\n\r\n            const room: Room = {\r\n                number: i,\r\n                size: this.state.roomSize,\r\n                diversity: 0,\r\n                background: 0,\r\n                people: array\r\n            }\r\n\r\n            cases.push(room);\r\n        }\r\n\r\n        this.setState({\r\n            caseRooms: cases\r\n        })\r\n\r\n        console.log(\"Cases initialized\");\r\n        console.log(cases);\r\n    }\r\n\r\n    submitForm = () => {\r\n        const {textValue} = this.state;\r\n        \r\n        let parse = textValue.split('\\n');\r\n\r\n        console.log(\"Parse result...\")\r\n        console.log(parse)\r\n\r\n        parse.forEach(this.parseTextData)\r\n\r\n        console.log(\"Further parse results...\")\r\n        console.log(this.state.persons)\r\n\r\n        this.placePeopleInRoomsForCaseA();\r\n\r\n        console.log(\"Creating persons\")\r\n        console.log(this.state.caseRooms);\r\n    }\r\n\r\n    parseTextData = (entry, index) => {\r\n        let persons: Person[] = this.state.persons;\r\n        const infoArray = entry.split(',');\r\n\r\n        let newPerson: Person = {\r\n            name: infoArray[0].trim(),\r\n            background: infoArray[1].trim(),\r\n            gender: infoArray[2].trim()\r\n        }\r\n\r\n        persons.push(newPerson);\r\n\r\n        this.setState({\r\n            persons: persons\r\n        });\r\n    }\r\n\r\n    placePeopleInRoomsForCaseA = () => {\r\n        console.log(\"Placing persons... %v\", this.state.persons)\r\n        for (let person of this.state.persons) {\r\n            //let foundRoom = false;\r\n\r\n            for (let room of this.state.caseRooms) {\r\n                if (room.size - room.people.length !== 0) {\r\n                    const res = this.checkRoomComposition(person, room);\r\n\r\n                    if (res) {\r\n                        break;\r\n                    }\r\n                }            \r\n            }\r\n        }\r\n    }\r\n\r\n    checkRoomComposition = (person: Person, room: Room) => {\r\n\r\n        if (this.inBetween(room.diversity) === 2) {\r\n            if (person.gender === \"f\") {\r\n                room.diversity += 1;\r\n                room.people.push(person);\r\n                return true;                 \r\n            }\r\n        }\r\n        \r\n        if (this.inBetween(room.diversity) === -2) {\r\n            if (person.gender === \"m\") {\r\n                room.diversity -= 1;\r\n                room.people.push(person);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        if (this.inBetween(room.background) === 2) {\r\n            if (person.background === \"tech\") {\r\n                room.background += 1;\r\n                room.people.push(person);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        if (this.inBetween(room.background) === -2) {\r\n            if (person.background === \"bus\") {\r\n                room.background -= 1;\r\n                room.people.push(person);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        if (this.inBetween(room.background) === 1 && this.inBetween(room.diversity) === 1) {\r\n            room.background += (person.background === \"tech\") ? 1 : -1;\r\n            room.diversity += (person.gender === \"f\") ? 1 : -1;\r\n            room.people.push(person);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    inBetween = (value) => {\r\n        const {roomSize} = this.state;\r\n\r\n        if (value >= 0) {\r\n            if (value < roomSize - 2) {\r\n                return 1;\r\n            }\r\n\r\n            return 2;\r\n        }\r\n        else if (value < 0) {\r\n            if (Math.abs(value) < roomSize - 2) {\r\n                return -1;\r\n            }\r\n\r\n            return -2;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    render() {\r\n        if (true) {\r\n            return (\r\n                <div className=\"placeholder\">\r\n                    Not quite ready yet ...\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div>\r\n                    <p># of rooms</p>\r\n                    <select onChange={item => this.setSelectRooms(item)}>\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n                        <option value=\"6\">6</option>\r\n                        <option value=\"7\">7</option>\r\n                        <option value=\"8\">8</option>\r\n                        <option value=\"9\">9</option>\r\n                        <option value=\"10\">10</option>\r\n                    </select>\r\n                    <p>Size of each room</p>\r\n                    <select onChange={item => this.setRoomSize(item)}>\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n                        <option value=\"6\">6</option>\r\n                        <option value=\"7\">7</option>\r\n                        <option value=\"8\">8</option>\r\n                        <option value=\"9\">9</option>\r\n                        <option value=\"10\">10</option>\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label>Enter values in this format: name, background, gender</label><br/>\r\n                    <textarea value={this.state.textValue} cols={35} rows={100} onChange={this.handleChange} /> \r\n                    <input type=\"button\" value=\"Submit\" onClick={this.submitForm}/>\r\n                </div>\r\n                <div className=\"output\">\r\n                    <p>{this.state.result}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sorter;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport Aboutme from './components/Aboutme/Aboutme'\r\nimport Links from './components/Links/Links'\r\nimport Navigation from './components/Navigation/Navigation'\r\nimport MDBPanel from './components/MDBPanel/MDBPanel'\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\nimport './components/MDBPills/MDBPills.css'\r\nimport './components/MDBJumbotron/MDBJumbotron.css'\r\nimport 'pure-react-carousel/dist/react-carousel.es.css';\r\nimport './components/Links/Links.css'\r\nimport MDBPanelStarwars from './components/MDBPanel/MDBPanelStarwars';\r\nimport './components/MDBPanel/MDBPanelStarwars.css'\r\nimport Sorter from './components/Sorter/Sorter';\r\nimport './components/Sorter/Sorter.css';\r\n\r\nReactDOM.render(<BrowserRouter>\r\n                    <div>\r\n                        <Navigation />\r\n                        <div className='main-content'>\r\n                            <div className='main-panel-content'>\r\n                                <Switch>\r\n                                    <Route exact path='/personalwebsite' component={App} />\r\n                                    <Route path='/personalwebsite/about' component={Aboutme} />\r\n                                    <Route path='/personalwebsite/links' component={Links} />\r\n                                    <Route path='/personalwebsite/apps' component={Sorter} />\r\n                                </Switch>\r\n                            </div>\r\n                            <div className='side-panel-content'>\r\n                                <MDBPanel />\r\n                                <MDBPanelStarwars api=\"people\"/>\r\n                                <MDBPanelStarwars api=\"starships\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/irobot.b3e1e89a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/knowledge.6e575bdb.png\";","module.exports = __webpack_public_path__ + \"static/media/cat.4d284ef0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/grandcanyon.06c39b60.jpg\";","module.exports = __webpack_public_path__ + \"static/media/iceland.6fb9952f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/japan.24e968b6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/leafs.df616bb5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/prague.df34e8fa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snowboarding.446e9b3d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/monster.0ad851a1.png\";"],"sourceRoot":""}